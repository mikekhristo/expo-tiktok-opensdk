{"version":3,"file":"withTikTokOpenSDK.js","sourceRoot":"","sources":["../src/withTikTokOpenSDK.ts"],"names":[],"mappings":"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","sourcesContent":["const { ConfigPlugin, withPlugins, withInfoPlist, withAndroidManifest, AndroidConfig } = require('@expo/config-plugins');\nconst { ExpoConfig } = require('@expo/config-types');\n\nconst { addMetaDataItemToMainApplication, getMainApplicationOrThrow } = AndroidConfig.Manifest;\n\ntype TikTokOpenSDKPluginProps = {\n  iosClientKey: string;\n  androidClientKey: string;\n  iosUniversalLink?: string;\n  scheme?: string;\n  redirectScheme?: string;\n};\n\nconst withTikTokOpenSDKAndroid: ConfigPlugin<TikTokOpenSDKPluginProps> = (config, props) => {\n  return withAndroidManifest(config, async (config) => {\n    const mainApplication = getMainApplicationOrThrow(config.modResults);\n\n    // Add TikTok SDK activities\n    mainApplication.activity = mainApplication.activity || [];\n    mainApplication.activity.push({\n      $: {\n        'android:name': 'com.tiktok.open.sdk.share.ShareActivity',\n        'android:exported': 'true',\n        'android:launchMode': 'singleTask'\n      }\n    });\n\n    // Add TikTok SDK metadata\n    addMetaDataItemToMainApplication(\n      config.modResults,\n      'com.bytedance.sdk.appKey',\n      props.androidClientKey\n    );\n\n    if (props.scheme) {\n      addMetaDataItemToMainApplication(\n        config.modResults,\n        'com.bytedance.sdk.scheme',\n        props.scheme\n      );\n    }\n\n    return config;\n  });\n};\n\nconst withTikTokOpenSDKIOS: ConfigPlugin<TikTokOpenSDKPluginProps> = (config, props) => {\n  return withInfoPlist(config, (config) => {\n    // Add URL schemes\n    config.modResults.CFBundleURLTypes = config.modResults.CFBundleURLTypes || [];\n    config.modResults.CFBundleURLTypes.push({\n      CFBundleURLSchemes: [\n        `tiktok${props.iosClientKey}`,\n        props.scheme,\n        props.redirectScheme\n      ].filter(Boolean)\n    });\n\n    // Add LSApplicationQueriesSchemes\n    config.modResults.LSApplicationQueriesSchemes = [\n      ...(config.modResults.LSApplicationQueriesSchemes || []),\n      'tiktokopensdk',\n      'tiktoksharesdk',\n      'snssdk1128',\n      'snssdk1233'\n    ];\n\n    // Add Universal Links if provided\n    if (props.iosUniversalLink) {\n      const domains = props.iosUniversalLink.replace(/https?:\\/\\//, '').split('/')[0];\n      config.modResults.com_apple_developer_associated_domains = [\n        `applinks:${domains}`\n      ];\n    }\n\n    return config;\n  });\n};\n\nconst withTikTokOpenSDK: ConfigPlugin<TikTokOpenSDKPluginProps> = (config, props) => {\n  if (!props.iosClientKey && !props.androidClientKey) {\n    throw new Error(\n      'Missing required TikTok SDK configuration. Please provide at least one of: iosClientKey or androidClientKey'\n    );\n  }\n\n  return withPlugins(config, [\n    [withTikTokOpenSDKAndroid, props],\n    [withTikTokOpenSDKIOS, props]\n  ]);\n};\n\nmodule.exports = withTikTokOpenSDK;\n"]}