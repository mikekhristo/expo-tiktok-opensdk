{"version":3,"file":"withTikTokOpenSDK.js","sourceRoot":"","sources":["../src/withTikTokOpenSDK.ts"],"names":[],"mappings":"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","sourcesContent":["import { ConfigPlugin, createRunOncePlugin, withPlugins, withInfoPlist, withAndroidManifest, AndroidConfig, withDangerousMod } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nconst { addMetaDataItemToMainApplication, getMainApplicationOrThrow } = AndroidConfig.Manifest;\nconst pkg = require('../../package.json');\n\ninterface TikTokOpenSDKPluginProps {\n  iosClientKey: string;\n  androidClientKey: string;\n  iosUniversalLink?: string;\n  scheme?: string;\n  redirectScheme?: string;\n}\n\nconst withTikTokOpenSDKAndroid: ConfigPlugin<TikTokOpenSDKPluginProps> = (config, props) => {\n  return withAndroidManifest(config, async (config) => {\n    const mainApplication = getMainApplicationOrThrow(config.modResults);\n\n    // Add TikTok SDK activities\n    if (!Array.isArray(mainApplication.activity)) {\n      mainApplication.activity = [];\n    }\n\n    const hasShareActivity = mainApplication.activity.some(\n      activity => activity.$?.['android:name'] === 'com.tiktok.open.sdk.share.ShareActivity'\n    );\n\n    if (!hasShareActivity) {\n      mainApplication.activity.push({\n        $: {\n          'android:name': 'com.tiktok.open.sdk.share.ShareActivity',\n          'android:exported': 'true',\n          'android:launchMode': 'singleTask'\n        }\n      });\n    }\n\n    // Add TikTok SDK metadata\n    if (!mainApplication['meta-data']) {\n      mainApplication['meta-data'] = [];\n    }\n\n    const appKeyMetadata = mainApplication['meta-data'].find(\n      item => item.$?.['android:name'] === 'com.bytedance.sdk.appKey'\n    );\n\n    if (!appKeyMetadata) {\n      addMetaDataItemToMainApplication(\n        mainApplication,\n        'com.bytedance.sdk.appKey',\n        props.androidClientKey\n      );\n    }\n\n    return config;\n  });\n};\n\nconst withTikTokOpenSDKIOS: ConfigPlugin<TikTokOpenSDKPluginProps> = (config, props) => {\n  return withInfoPlist(config, config => {\n    const infoPlist = config.modResults;\n\n    // Add URL schemes\n    if (!Array.isArray(infoPlist.CFBundleURLTypes)) {\n      infoPlist.CFBundleURLTypes = [];\n    }\n\n    const urlSchemes = new Set<string>();\n    if (props.scheme) {\n      urlSchemes.add(props.scheme);\n    }\n    if (props.redirectScheme) {\n      urlSchemes.add(props.redirectScheme);\n    }\n\n    const hasExistingURLTypes = infoPlist.CFBundleURLTypes.some(\n      (urlType: any) => urlType.CFBundleURLSchemes?.some((scheme: string) => urlSchemes.has(scheme))\n    );\n\n    if (!hasExistingURLTypes && urlSchemes.size > 0) {\n      infoPlist.CFBundleURLTypes.push({\n        CFBundleURLSchemes: Array.from(urlSchemes)\n      });\n    }\n\n    // Add LSApplicationQueriesSchemes\n    if (!Array.isArray(infoPlist.LSApplicationQueriesSchemes)) {\n      infoPlist.LSApplicationQueriesSchemes = [];\n    }\n\n    const tiktokSchemes = ['tiktokopensdk', 'tiktoksharesdk', 'snssdk1180'];\n    const newSchemes = tiktokSchemes.filter(\n      scheme => !infoPlist.LSApplicationQueriesSchemes?.includes(scheme)\n    );\n\n    if (newSchemes.length > 0) {\n      infoPlist.LSApplicationQueriesSchemes = [\n        ...(infoPlist.LSApplicationQueriesSchemes || []),\n        ...newSchemes\n      ];\n    }\n\n    // Add TikTok client key\n    infoPlist.TikTokClientKey = props.iosClientKey;\n\n    // Add Universal Link if provided\n    if (props.iosUniversalLink) {\n      infoPlist.TikTokUniversalLink = props.iosUniversalLink;\n    }\n\n    return config;\n  });\n};\n\nconst withTikTokOpenSDK: ConfigPlugin<TikTokOpenSDKPluginProps> = (config, props) => {\n  // Register the module in the app's native code\n  config = withDangerousMod(config, [\n    'ios',\n    async (config) => {\n      const projectRoot = config.modRequest.projectRoot;\n      const appDelegateFile = path.join(projectRoot, 'ios', config.modRequest.projectName || '', 'AppDelegate.mm');\n      \n      let contents = fs.readFileSync(appDelegateFile, 'utf-8');\n      \n      // Add import if not present\n      if (!contents.includes('#import <ExpoTikTokOpenSDKModule/ExpoTikTokOpenSDKModule.h>')) {\n        contents = contents.replace(\n          '#import \"AppDelegate.h\"',\n          '#import \"AppDelegate.h\"\\n#import <ExpoTikTokOpenSDKModule/ExpoTikTokOpenSDKModule.h>'\n        );\n      }\n      \n      // Add module registration if not present\n      if (!contents.includes('[ExpoTikTokOpenSDKModule register')) {\n        contents = contents.replace(\n          '[super application:application didFinishLaunchingWithOptions:launchOptions];',\n          '[ExpoTikTokOpenSDKModule register];\\n  [super application:application didFinishLaunchingWithOptions:launchOptions];'\n        );\n      }\n      \n      fs.writeFileSync(appDelegateFile, contents);\n      return config;\n    }\n  ]);\n\n  return withPlugins(config, [\n    [withTikTokOpenSDKAndroid, props],\n    [withTikTokOpenSDKIOS, props]\n  ]);\n};\n\nexport default createRunOncePlugin(withTikTokOpenSDK, pkg.name, pkg.version);\n"]}